* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

:root {
  font-family: "Inter", sans-serif;
  font-weight: 400;
  color: #FFF;
}

.button {
  border: none;
  border-radius: 6px;
  padding: 10px 25px;
  font-size: 14px;
  line-height: 143%;
  background-color: #F4F8FF;
  color: #4777ED;
  cursor: pointer;
  transition: background-color 0.3s ease-out;
}

.button:hover,
.button:focus-visible {
  background-color: #ddd;
}

.container {
  margin: auto;
  padding-top: 20px;
  width: 743px;
}

.checkList {
  min-height: 91px;
  border-radius: 10px;
  overflow: hidden;
}

.checkList-header {
  width: 100%;
  border-radius: 10px;
  padding: 12px 18px 15px 22px;
  background-color: #3579F5;
  display: flex;
  justify-content: space-between;
}

.checkList-header__content {
  display: flex;
}

.checkList-loader {
  margin-top: 4px;
  height: 60px;
  padding: 15px 14px;
  border-radius: 50%;
  border: 1px solid rgba(255, 255, 255, 0.5);
  font-size: 20px;
  line-height: 150%;
  position: relative;
}

.checkList-loader__text {
  width: 30px;
}

.checkList-loader__progress {
  position: absolute;
  top: -1.5px;
  left: -1.5px;

  & > svg{
    width: 61px;
    height: 61px;
  }
}

.checkList-main {
  margin-left: 16px;
  display: flex;
  flex-direction: column;
  align-items: self-start;
}

.checkList-main__item {
  margin-top: 4px;
}
.checkList-main__item:first-child {
  margin-top: 0px;
}

.checkList-tag {
  border-radius: 40px;
  padding: 0 13px;
  font-size: 12px;
  line-height: 150%;
  background-color: #2364DB;
}

.checkList-title {
  font-weight: 600;
  font-size: 15px;
  line-height: 133%;
}

.checkList-next-action {
  font-size: 12px;
  line-height: 150%;
}

.checkList__open {
  padding-top: 14px;
}

.circle {
  --size: 61px;
  --half-size: calc(var(--size) / 2);
  --stroke-width: 2px;
  --radius: calc((var(--size) - var(--stroke-width)) / 2);
  --circumference: calc(var(--radius) * pi * 2);
  --dash: calc((var(--progress) * var(--circumference)) / 100);
  cx: var(--half-size);
  cy: var(--half-size);
  r: var(--radius);
  stroke-width: var(--stroke-width);
  fill: none;
  stroke-linecap: round;
  transform: rotate(-90deg);
  transform-origin: var(--half-size) var(--half-size);
  stroke-dasharray: var(--dash) calc(var(--circumference) - var(--dash));
  transition: stroke-dasharray 0.3s linear 0s;
  stroke: #FFF;
  animation: progress-animation 10s linear 0.3s 1 forwards;
}

@property --progress {
  syntax: "<number>";
  inherits: false;
  initial-value: 0;
}
@keyframes progress-animation {
  from {
    --progress: 0;
  }
  to {
    --progress: 100;
  }
}/*# sourceMappingURL=style.css.map */